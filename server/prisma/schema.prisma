generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  userid  String  @id @default(uuid())
  name    String
  email   String  @unique
  phoneno String
  orders  Order[]
}

model Otp {
  oid    String @id @default(uuid())
  otp    String
  pageid String
}

model Event {
  eventid     String   @id @default(uuid())
  imageLoc    String
  title       String
  category    String
  tags        String
  description String?
  date        String
  time        String
  venue       String
  artist      String
  terms       String?
  Ticket      Ticket[]
  orders      Order[]
}

model Ticket {
  ticketid    String  @id @default(uuid())
  event       Event   @relation(fields: [eventid], references: [eventid])
  eventid     String
  type        String
  amt       Int
  qty         Int
  description String?
}

model Order {
  orderid      String   @id @default(uuid())
  type         String
  tickets      Int
  amt          Int
  purchasedate DateTime @default(now())
  organizer    String
  Users        Users    @relation(fields: [email], references: [email])
  email        String
  Event        Event?   @relation(fields: [eventid], references: [eventid])
  eventid String?
}

model Stats {
  orderid    String @id @default(uuid())
  type       String
  ticketsold Int
}

// model Post {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   title     String   @db.VarChar(255)
//   content   String?
//   published Boolean  @default(false)
//   author    User     @relation(fields: [authorId], references: [id])
//   authorId  Int
// }

// model Profile {
//   id     Int     @id @default(autoincrement())
//   bio    String?
//   user   User    @relation(fields: [userId], references: [id])
//   userId Int     @unique
// }

// model User {
//   id      Int      @id @default(autoincrement())
//   email   String   @unique
//   name    String?
//   posts   Post[]
//   profile Profile?
// }
